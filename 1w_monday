class ArrayStack:
  def __init__(self,capacity):
    self.capacity = capacity
    self.array = [None] * capacity
    self.top_idx = -1
  
  def isEmpty(self):
    return self.top_idx == -1

  def isFull(self):
    return self.top_idx == self.capacity -1

  def push(self, item):
    if not self.isFull():
      self.top_idx +=1
      self.array[self.top_idx] = item
    else : pass

  def pop(self):
    if not self.isEmpty():
          item = self.array[self.top_idx]
          self.top_idx -= 1
          return item
    else : 
      return -1
  
  def size(self):
    return self.top_idx + 1

  def top(self):
    if self.isEmpty():
      print(-1)
    else:
      return self.array[self.top_idx]

if __name__ == '__main__':
  N = int(input())
  stack = ArrayStack(N)


  for _ in range(N):
    func, *num= input().split()
    num = int(num[0]) if num else None

    if func == 'push':
        stack.push(num)
    elif func == 'pop':
        print(stack.pop())
    elif func == 'size':
        print(stack.size())
    elif func == 'empty':
        print(1 if stack.isEmpty() else 0)
    elif func == 'top':
        print(stack.top())
